version: "3.9"

services:
  client:
    container_name: client
    image: prakticum-client
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    restart: always
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - SERVER_PORT=${SERVER_PORT}
    depends_on:
      - server
    networks:
      - mynet

  server:
    container_name: server
    env_file:
      - "./.env"
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynet

  postgres:
    image: postgres:14
    container_name: postgres
    env_file:
      - "./.env"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - mynet

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      # Проброс порта 80 для HTTP
      - "80:80"
      # Проброс порта 443 для HTTPS
      - "443:443"
    restart: always
   volumes:
      - ./data/certbot/www:/var/www/certbot/:ro
      - ./data/certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - certbot
      - client
      - server
    networks:
      - mynet

  certbot:
    image: certbot/certbot:latest
    # container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt/:rw
      - ./data/certbot/www:/var/www/certbot/:rw
    # entrypoint: certbot certonly --webroot -w /var/www/certbot -d defense-game-crew.ya-praktikum.tech --agree-tos --email juliusgerba@yandex.ru 1
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done;'"
    # networks:
    #   - mynet

networks:
  mynet:
    driver: bridge
