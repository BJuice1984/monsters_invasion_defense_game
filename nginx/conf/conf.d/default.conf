    # Первый серверный блок для обработки HTTP запросов
    server {
        listen 80;
        listen [::]:80;
        ssi on;

        server_name defense-game-crew.ya-praktikum.tech;
        # server_name your-local-domain.test;

        # Обработка запросов для валидации домена при получении сертификата Let's Encrypt
        location /.well-known/acme-challenge/ {
            # Указываем директорию, где будут храниться файлы валидации
            root /var/www/certbot;
        }

        # Перенаправление всех остальных запросов на HTTPS
        location / {
            # Возвращаем код 301 (постоянное перенаправление) на HTTPS
            return 301 https://$host$request_uri;
        }
    }

    # Второй серверный блок для обработки HTTPS запросов
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2  on;
        ssi on;


        server_name defense-game-crew.ya-praktikum.tech;
        # server_name your-local-domain.test;

        # Указываем пути к SSL сертификатам и ключам
        # ssl_certificate /etc/nginx/localkeys/your-local-domain.test.pem;
        # ssl_certificate_key /etc/nginx/localkeys/your-local-domain.test-key.pem;
        ssl_certificate /etc/nginx/ssl/live/$server_name/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/$server_name/privkey.pem;

        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        # ssl_session_cache shared:MozSSL:10m;
        # ssl_session_tickets on;
        # ssl_early_data on;

        # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/nginx/dhparam

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!EXP:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;

        add_header Strict-Transport-Security "max-age=31536000;";

        ssl_stapling on;
        ssl_stapling_verify on;

        add_header  X-Content-Type-Options "nosniff";
        add_header  X-XSS-Protection "1; mode=block";

        location /ping {
            add_header content-type "application/json";
            return 200 '{"status": "ok", "message": "pong"}';
        }

        location / {
            proxy_pass http://client;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;

            client_max_body_size    128m;
        }

        location /api/v2 {
            proxy_pass http://server;
           proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;

            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;

            client_max_body_size    128m;
        }
    }

